import datetime as dt
from dateutil.parser import parse
print(dt.datetime.now()) #current ‘year’, ‘month’, ‘date’, ‘hour’, ‘minute’, ‘seconds’, ‘microseconds’.
print(dt.date.today()) # current date only
print(dt.datetime(2001, 1, 31, 10, 51, 0))
print(dt.datetime.fromtimestamp(528756281)) #unixtimestamp is number of seconds since the epoch date: ‘Jan 01, 1970’

output:
2019-10-12 14:39:34.397691
2019-10-12
2001-01-31 10:51:00
1986-10-03 20:44:41

-------
from dateutil.parser import parse
print(parse('2010 Jan 31'))
print(parse('January 31, 2010'))
print(parse('31-01-2010'))
print(parse('31, March 31, 2010, 10:51pm'))

output:
2010-01-31 00:00:00
2010-01-31 00:00:00
2010-01-31 00:00:00
2031-03-31 22:51:00

-------all date time formats, check in:http://strftime.org/
print(dt.datetime(2001, 1, 31, 10, 51, 0).strftime('%Y-%m-%d::%H-%M'))

output:
2001-01-31::10-51

-------
dt2=dt.datetime(2019,2,15)
print(dt2.day)
print(dt2.isoweekday())
print(dt2.month)
print(dt2.year)

output:
15
5
2
2019

-------
print(dt.time(10,40,10,102301)) #defualt output format is: hours, minutes, seconds and microseconds.

output:
10:40:10.102301

-------timedelta - period of time, used to add or remove a certain duration of time from datetime objects
print(dt.date.today()+dt.timedelta(days=30)) # current date id 2019-10-12
print(dt.date.today()+dt.timedelta(weeks=2,days=30,hours=2,minutes=40))

output:
2019-11-11
2019-11-25

-------
import pytz as tz
print(tz.all_timezones[:5])
print(dt.datetime(2001, 1, 31, 3, 30, 0, 0).astimezone(tz.timezone('Africa/Addis_Ababa')))

output:
2019-11-11
2019-11-25

-------How many days has it been since you were born
bday='Jun 4, 1992'
print(dt.datetime.now() - parse(bday))

output:
9991 days, 16:43:07.652657

-------number of saturdays between two dates
import datetime as dt
from dateutil.parser import parse
d1=dt.date(1869, 1, 2)
d2=dt.date(1869, 10, 2)
delta=d2-d1
dates_btw=[(d1+dt.timedelta(i)) for i in range(delta.days+1)]
#print(dates_btw) # all date between d2 and d1
saturdays=0
for d in dates_btw:
    saturdays+=int(d.isoweekday()==6) # returns true or false and converted to 0 and 1 by int
print(saturdays)

output:
40

-------count the number of days between successive days
datestrings = ['Oct, 2, 1869', 'Oct, 10, 1869', 'Oct, 15, 1869', 'Oct, 20, 1869', 'Oct, 23, 1869']
dates=[parse(d) for d in datestrings]
print([d.days for d in np.diff(dates)])

output:
[8, 5, 5, 3]

-------last day of the month for any given date
date=dt.date(1952,2,12)
print(cl.monthrange(date.year,date.month)[1])

output:
29

-------
unixtimestamp = 528756281
print(dt.datetime.fromtimestamp(528756281).strftime('%d-%B-%Y'))

output:
03-October-1986

-------kolkata time
import numpy as np
import pytz as tz
import datetime as dt
import calendar as cl

print(dt.datetime.now().astimezone(tz.timezone('Asia/Kolkata')))

output:
2019-10-13 00:12:53.360268+05:30

-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


-------


output:


